apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: {{SERVICE_NAME}}-dep
  namespace: {{NAMESPACE}}
  labels:
    zone: default
    app: {{SERVICE_NAME}}
  annotations:
    something: something
spec:
  selector:
    matchLabels:
      app: {{SERVICE_NAME}}-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: {{SERVICE_NAME}}-pod
    spec:
      containers:
        - name: {{SERVICE_NAME}}-pod
          image: {{IMAGE}}
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: podinfo
              mountPath: /etc/podinfo
            - name: config-volume
              mountPath: /etc/MSconfig
            - name: job-function-volume
              mountPath: /app/JobFunctions.py
              subPath: JobFunctions.py
          env:
            - name: APP
              value: {{SERVICE_NAME}}
#      terminationGracePeriodSeconds: 0
      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations
        - name: config-volume
          configMap:
            name: microservices-configmap
            items:
            - key: service-mesh
              path: servicemesh
            - key: work-model
              path: workmodel
        - name: job-function-volume
          configMap:
            name: jobfunction-configmap
            items:
              - key: JobFunction
                path: JobFunctions.py
---
apiVersion: v1
kind: Service
metadata:
  name: {{SERVICE_NAME}}
  namespace: {{NAMESPACE}}
  labels:
    app: {{SERVICE_NAME}}-pod
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    nodePort:
    name: input
  selector:
    app: {{SERVICE_NAME}}-pod